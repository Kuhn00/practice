<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuhn.mybatis.mapper.EmpMapper">
<!--    List<Emp> getAllEmp();-->
<!--    对象的属性名和表的字段名不一致时 select * from t_emp 会查不到不一致的字段
       select eid, emp_name empName, age, sex, email, did from t_emp  将不一致的字段使用和属性名相同的别名
       设置全局配置
          <settings>
        将_(下划线)自动映射为驼峰 emp_name -> empName
    <setting name="mapUnderscoreToCamelCase" value="true"/>
</settings>
       -->

<!--    resultMap   设置自定义映射关系  id 映射的唯一标识  不能重复   type设置映射关系中的实体类类型
         标签： id 对应主键的映射关系       property type中实体类的属性名   column字段名   -->
    <resultMap id="empMap" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
    </resultMap>
    <select id="getAllEmp" resultMap="empMap">
        select * from t_emp
    </select>

    <!--处理多对一映射关系方式一：级联属性赋值-->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <result property="dept.did" column="dept.did"/>
        <result property="dept.deptName" column="dept.dept_name"/>
    </resultMap>

    <!--处理多对一映射关系方式二：association-->
    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <!--
        association:处理多对一的映射关系
        property:需要处理多对的映射关系的属性名
        javaType:该属性的类型
        -->
        <association property="dept" javaType="Dept">
            <id property="did" column="did"/>
            <result property="deptName" column="dept_name"/>
        </association>
    </resultMap>


    <!--Emp getEmpAndDept(@Param("eid") Integer eid);-->
    <select id="getEmpAndDept" resultMap="empAndDeptResultMapTwo">
        select * from t_emp left join t_dept on t_emp.did = t_dept.did where t_emp.eid = #{eid}
    </select>


    <resultMap id="empAndDeptByStepResultMap" type="emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <!--
            property:设置需要处理映射的属性名
            select:设置分步查询的sql的唯一标识（namespace.SQLId或mapper接口的全类名.方法名）
            column:设置分布查询的条件  即将某个字段在select中的查询条件
            fetchType:当开启了全局的延迟加载之后，可通过此属性手动控制延迟加载的效果
            fetchType="lazy|eager":lazy表示延迟加载，eager表示立即加载
        -->
        <association property="dept"
                     select="com.kuhn.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="did"
                     fetchType="eager"/>
    </resultMap>

<!--     Emp getEmpAndDeptByStepOne(@Param("eid") Integer eid);-->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select * from t_emp where eid = #{eid}
    </select>

<!--    List<Emp> getDeptAndEmpByStepTwo(@Param("did") Integer did);-->
    <select id="getDeptAndEmpByStepTwo" resultType="emp">
        select * from t_emp where did = #{did}
    </select>
</mapper>