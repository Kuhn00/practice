#include<iostream>
#include<string>
#define MAX 1000
using namespace std;

//联系人结构体
struct Person
{
	string m_Name; //姓名
	int m_Sex; //性别：1男 2女
	int m_Age; //年龄
	string m_Phone; //电话
	string m_Addr; //住址
};

//通讯录结构体 保存的联系人数最多为1000
struct Addressbooks
{
	struct Person personArray[MAX]; //通讯录中保存的联系人数组
	int m_Size; //通讯录中人员个数
};


void showMenu()
{
	cout << "***************************" << endl;
	cout << "*****  1、添加联系人  *****" << endl;
	cout << "*****  2、显示联系人  *****" << endl;
	cout << "*****  3、删除联系人  *****" << endl;
	cout << "*****  4、查找联系人  *****" << endl;
	cout << "*****  5、修改联系人  *****" << endl;
	cout << "*****  6、清空联系人  *****" << endl;
	cout << "*****  0、退出通讯录  *****" << endl;
	cout << "***************************" << endl;
}

//应该有一个唯一不重复的值保证 person是唯一的
void addPerson(Addressbooks *abs)
{
	string name; //姓名
	int sex; //性别：1男 2女
	int age; //年龄
	string phone; //电话
	string addr; //住址

	if (abs->m_Size == MAX)
	{
		cout << "通讯录已满 无法添加" << endl;
		return;
	}
	else
	{
		cout << "请输入姓名：" << endl;
		cin >> name;
		abs->personArray[abs->m_Size].m_Name = name;

		cout << "请输入性别：" << endl;
		cout << "1 -- 男" << endl;
		cout << "2 -- 女" << endl;

		//性别
		int sex = 0;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[abs->m_Size].m_Sex = sex;
				break;
			}
			cout << "输入有误，请重新输入";
		}

		//年龄
		cout << "请输入年龄：" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[abs->m_Size].m_Age = age;

		//联系电话
		cout << "请输入联系电话：" << endl;
		string phone = "";
		cin >> phone;
		abs->personArray[abs->m_Size].m_Phone = phone;

		//家庭住址
		cout << "请输入家庭住址：" << endl;
		string address;
		cin >> address;
		abs->personArray[abs->m_Size].m_Addr = address;

		//更新通讯录人数
		abs->m_Size++;

		cout << "添加成功" << endl;
		system("pause");
		system("cls");
	}
}


void showPerson(Addressbooks *abs)
{
	if (0 == abs->m_Size)
	{
		cout << "通讯录为空 请先进行添加！" << endl;
		return;
	}
	else
	{
		for (int i = 0; i < abs->m_Size; i++)
		{
			cout << "姓名：" << abs->personArray[i].m_Name << "\t";
			cout << "性别：" << (abs->personArray[i].m_Sex == 1 ? "男" : "女") << "\t";
			cout << "年龄：" << abs->personArray[i].m_Age << "\t";
			cout << "电话：" << abs->personArray[i].m_Phone << "\t";
			cout << "住址：" << abs->personArray[i].m_Addr << endl;
		}
	}

	system("pause");
	system("cls");
}


//判断是否存在查询的人员，存在返回在数组中索引位置，不存在返回-1
int isExist(Addressbooks * abs, string name)
{
	for (int i = 0; i < abs->m_Size; i++)
	{
		if (abs->personArray[i].m_Name == name)
		{
			return i;
		}
	}
	return -1;
}


void deletePerson(Addressbooks *abs)
{
	int ret = 0;
	string name;
	cout << "请输入您要删除的联系人" << endl;
	cin >> name;

	ret = isExist(abs, name);
	if (-1 != ret)
	{
		for (int i = ret; i < abs->m_Size - 1; i++)
		{
			abs->personArray[i] = abs->personArray[i + 1];
		}
		abs->m_Size--;
		cout << "删除成功" << endl;
	}
	else
	{
		cout << "该通讯录中不存在此人，请重新进行输入！" << endl;
	}

	system("pause");
	system("cls");
}


void findPerson(Addressbooks *abs)
{
	int ret;
	string name;
	cout << "请输入要查找的联系人的姓名：" << endl;
	cin >> name;
	ret = isExist(abs, name);
	if (-1 != ret)
	{
		cout << "姓名：" << abs->personArray[ret].m_Name << "\t";
		cout << "性别：" << abs->personArray[ret].m_Sex << "\t";
		cout << "年龄：" << abs->personArray[ret].m_Age << "\t";
		cout << "电话：" << abs->personArray[ret].m_Phone << "\t";
		cout << "住址：" << abs->personArray[ret].m_Addr << endl;
	}
	else
	{
		cout << "该通讯录中不存在此人，请重新进行输入！" << endl;
	}

	system("pause");
	system("cls");
}


void changePerson(Addressbooks *abs)
{
	cout << "请输入您要修改的联系人" << endl;
	string name;
	cin >> name;

	int ret = isExist(abs, name);
	if (ret != -1)
	{
		//姓名
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		abs->personArray[ret].m_Name = name;

		cout << "请输入性别：" << endl;
		cout << "1 -- 男" << endl;
		cout << "2 -- 女" << endl;

		//性别
		int sex = 0;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[ret].m_Sex = sex;
				break;
			}
			cout << "输入有误，请重新输入";
		}

		//年龄
		cout << "请输入年龄：" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[ret].m_Age = age;

		//联系电话
		cout << "请输入联系电话：" << endl;
		string phone = "";
		cin >> phone;
		abs->personArray[ret].m_Phone = phone;

		//家庭住址
		cout << "请输入家庭住址：" << endl;
		string address;
		cin >> address;
		abs->personArray[ret].m_Addr = address;

		cout << "修改成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}

	system("pause");
	system("cls");
}

void clearPerson(Addressbooks *abs)
{
	abs->m_Size = 0;
	cout << "通讯录已清空" << endl;
	system("pause");
	system("cls");
}

int main()
{
	int select = 0;
	Addressbooks abs;
	abs.m_Size = 0;

	while (true)
	{
		showMenu();

		cin >> select;
		switch (select)
		{
			case 1:	//1、添加联系人
				addPerson(&abs);
				break;
			case 2:	//2、显示联系人
				showPerson(&abs);
				break;
			case 3:	//3、删除联系人
				deletePerson(&abs);
				break;
			case 4:	//4、查找联系人
				findPerson(&abs);
				break;
			case 5:	//5、修改联系人
				changePerson(&abs);
				break;
			case 6:	//6、清空联系人
				clearPerson(&abs);
				break;
			case 0:	//0、退出通讯录
				cout << "欢迎下次使用" << endl;
				system("pause");
				return 0;
				break;
		default:
			cout << "您的输入有误 请重新输入！" << endl;
			break;
		}
	}
	system("pause");
	return 0;
}